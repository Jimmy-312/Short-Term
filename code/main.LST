C51 COMPILER V9.01   MAIN                                                                  07/25/2021 11:19:44 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          #define uint unsigned int
   4          #define uchar unsigned char
   5          #define Nack 10 
   6          #define ACK(); SDA=0;NOP_3();SCL=1;NOP_3();SCL=0;
   7          
   8          #define Thread1 0x01
   9          #define Thread2 0x02
  10          #define Thread3 0x03
  11          
  12          #define Hisn 0x00
  13          #define EEPDa 0x04
  14             
  15          sbit RS=P1^2;             
  16          sbit RW=P1^1;          
  17          sbit LCDE=P1^0;
  18          sbit LED=P1^6;
  19          sbit BUZZ=P1^7;
  20          sbit INT2=P3^5;       
  21          
  22          sbit SCL=P1^3;        
  23          sbit SDA=P1^4;  
  24          
  25          uchar bdata EEP;
  26          sbit EEP_7 = EEP^7;
  27          sbit EEP_0 = EEP^0;     
  28          
  29          bdata uchar flag;
  30          sbit bit_out=flag^1;
  31          sbit bit_in=flag^0;
  32          sbit sta=flag^2;
  33          sbit set=flag^3;
  34          sbit his=flag^4;
  35          sbit sw=flag^5;
  36          sbit setw=flag^6;
  37          sbit setd=flag^7;
  38          
  39          bdata uchar flag2;
  40          sbit setm=flag2^0;
  41          sbit bluea=flag2^1;
  42          
  43          uchar temH,temL,err;
  44          
  45          void busy(void);
  46          void cmd_w(uchar cmd);
  47          void init1602(void);
  48          void dat_wrt(uchar dat); 
  49          void LCD_print(uchar *str,uchar n);
  50          
  51          void I2C_Start(void);
  52          void I2C_Stop(void);
  53          void I2C_Ack(void);
  54          void Write_Byte(uchar wdata);
  55          uchar Read_Byte(void);
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 11:19:44 PAGE 2   

  56          uchar eread(uchar addr);
  57          void ewrite(uchar addr,uchar dat);
  58          
  59          void ConfigUART(unsigned int baud);
  60          void BlueSend(uchar *str,uchar n);
  61          void delay(uint a);
  62          void i2c_Init(void);
  63          void start_bit(void);
  64          void stop_bit(void);
  65          void send(uchar dat_byte);
  66          void send_bit(void);
  67          uchar read(void);
  68          void receive_bit(void);
  69          uint gettemp(void);
  70          void mtemp(void);
  71          void hisswitch(void);
  72          void SendHis();
  73          void inital();
  74          void BlueReceive();
  75          void time1int();
  76          
  77          uchar flag1;
  78          uchar RxdB;
  79          uint tem;
  80          float otem;
  81          uint temthread;
  82          uchar hisnum;
  83          uchar s[10];
  84          uchar sel;
  85          uchar td[3];
  86          uchar index;
  87          
  88          void main()
  89          {
  90   1              
  91   1              inital();
  92   1              
  93   1              while(1)
  94   1              {    
  95   2                      if(sta)
  96   2                      {
  97   3                              LCD_print("Result:",1);
  98   3                              mtemp();
  99   3                              sta=0;
 100   3                              LCD_print(s,0);
 101   3                              if(tem>temthread){
 102   4                                      BUZZ=0;
 103   4                                      LED=0;
 104   4                                      delay(1000);
 105   4                                      BUZZ=1;
 106   4                                      LED=1;
 107   4                              }  
 108   3                              
 109   3                              hisnum++;
 110   3                              if(hisnum==9)
 111   3                                      hisnum=1;  
 112   3                              
 113   3                              ewrite(Hisn,hisnum);
 114   3                          ewrite(EEPDa+hisnum*3,tem/1000);  
 115   3                          ewrite(EEPDa+hisnum*3+1,tem % 1000/100);  
 116   3                              ewrite(EEPDa+hisnum*3+2,tem%100/10); 
 117   3                                      
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 11:19:44 PAGE 3   

 118   3                      }else
 119   2                      if(set)
 120   2                      {
 121   3                              if(!setd)
 122   3                              {
 123   4                                      s[0]=td[0]+0x30;
 124   4                                      s[1]=td[1]+0x30;
 125   4                                      s[3]=td[2]+0x30;
 126   4                                      s[2]='.';
 127   4                                      s[4]='C';
 128   4                                      s[5]=0;
 129   4                                      LCD_print("Set:",1);
 130   4                                      LCD_print(s,0);
 131   4                                      setd=1;
 132   4                              }
 133   3                              if(setw)
 134   3                              {
 135   4                                      td[2]+=1;
 136   4                                      if(td[2]==10)
 137   4                                      {
 138   5                                              td[1]+=1;
 139   5                                              td[2]=0;
 140   5                                      }
 141   4                                      ewrite(Thread3,td[2]);
 142   4                                      ewrite(Thread2,td[1]);
 143   4                                      setd=0;
 144   4                                      setw=0;
 145   4                              }
 146   3                              if(setm)
 147   3                              {
 148   4                                      td[2]-=1;
 149   4                                      if(!td[2])
 150   4                                      {
 151   5                                              td[1]-=1;
 152   5                                              td[2]=9;
 153   5                                      }
 154   4                                      ewrite(Thread3,td[2]);
 155   4                                      ewrite(Thread2,td[1]);
 156   4                                      setd=0;
 157   4                                      setm=0;
 158   4                              }
 159   3      
 160   3                      }else
 161   2                      if(his)
 162   2                      {       
 163   3                              if(sw)
 164   3                              {
 165   4                                      if(sel==0)
 166   4                                              sel=8;
 167   4                                      s[0]=eread(EEPDa+sel*3)+0x30;
 168   4                                      s[1]=eread(EEPDa+sel*3+1)+0x30;
 169   4                                      s[3]=eread(EEPDa+sel*3+2)+0x30;
 170   4                                      s[2]='.';
 171   4                                      s[4]='C';
 172   4                                      s[5]='\0';
 173   4                                      if(sel<=hisnum){
 174   5                                              index=hisnum+1-sel+0x30;
 175   5                                      }else{
 176   5                                              index=9+hisnum-sel+0x30;
 177   5                                      }
 178   4                                      sel--;
 179   4                                      LCD_print("History:",1);        
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 11:19:44 PAGE 4   

 180   4                                      LCD_print(s,0);
 181   4                                      s[0]=0x20;
 182   4                                      s[1]=0x20;
 183   4                                      s[2]=0x20;
 184   4                                      s[3]=0x20;
 185   4                                      s[4]=index;
 186   4                                      s[5]=0;
 187   4                                      LCD_print(s,0);
 188   4                                      sw=0;                      
 189   4                              }
 190   3                              if(bluea)
 191   3                              {
 192   4                                      while(bluea);
 193   4                                      LCD_print("          Sending...",0);
 194   4                                      SendHis(); 
 195   4                                      time1int();
 196   4                                      delay(5000);
 197   4                                      LED=1;                          
 198   4                                      sel=hisnum;
 199   4                                      sw=1;
 200   4                              }
 201   3                      }else{
 202   3                              
 203   3                      }
 204   2              }
 205   1      }
 206          
 207          void SendHis()
 208          {
 209   1              uchar i,j;
 210   1              j=hisnum;
 211   1              for(i=0;i<8;i++,j++)
 212   1              {
 213   2                      if(j==9)
 214   2                              j=1;
 215   2                      s[0]=eread(EEPDa+j*3)+0x30;
 216   2                      s[1]=eread(EEPDa+j*3+1)+0x30;
 217   2                      s[3]=eread(EEPDa+j*3+2)+0x30;
 218   2                      s[2]='.';
 219   2                      s[4]='C';
 220   2                      s[5]=0x20;
 221   2                      s[6]=i+1+0x30;
 222   2                      s[7]='\r';
 223   2                      s[8]='\n';
 224   2                      s[9]='\0';
 225   2                      BlueSend(s,10);
 226   2              }
 227   1              //s[0]=0x20;s[1]=0x20;s[2]=0x20;s[3]=0;
 228   1              LCD_print("Bluetooth",1);
 229   1              LCD_print("   ",0);
 230   1              s[0]='O';
 231   1              s[1]='K';
 232   1              s[2]='!';
 233   1              s[3]='\0';
 234   1              BlueSend(s,4);
 235   1              LCD_print(s,0);
 236   1      
 237   1      }
 238          
 239          void int0() interrupt 0
 240          {
 241   1              delay(100);
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 11:19:44 PAGE 5   

 242   1              if(INT0==0)
 243   1              {
 244   2                      SBUF=0x30;
 245   2                      if(his)
 246   2                      {
 247   3                              //LED=1;
 248   3                              if(bluea){
 249   4      
 250   4                              }else{
 251   4                                      set=1;
 252   4                                      setd=0;
 253   4                                      his=0;
 254   4                              }
 255   3                      }else
 256   2                      if(set){
 257   3                              set=0;
 258   3                              his=0;
 259   3                              LCD_print("    Welcome!      Press to START",1);
 260   3                      }else{
 261   3                              his=1;
 262   3                              //LED=0;
 263   3                              sel=hisnum;
 264   3                              sw=1;
 265   3                      }
 266   2              }
 267   1      }
 268          
 269          void int1() interrupt 2
 270          {
 271   1              delay(100);
 272   1              if(INT1==0)
 273   1              {
 274   2                      if(his)
 275   2                      {
 276   3                              if(bluea){
 277   4                                      bluea=0;
 278   4                              }else{
 279   4                                      sw=1;
 280   4                              }                       
 281   3                      }else
 282   2                      if(set)
 283   2                      {
 284   3                              setw=1;
 285   3                      }else{
 286   3                              sta=1;
 287   3                      }
 288   2              }
 289   1      } 
 290          
 291          void int2() interrupt 3
 292          {
 293   1              delay(100);
 294   1              if(INT2==0)
 295   1              {
 296   2                      if(his)
 297   2                      {
 298   3                              if(bluea){
 299   4      
 300   4                              }else{
 301   4                                      bluea=1;
 302   4                                      LED=0;
 303   4                                      LCD_print("Bluetooth",1);
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 11:19:44 PAGE 6   

 304   4                                      ConfigUART(9600);
 305   4                              }                               
 306   3                      }else
 307   2                      if(set)
 308   2                      {
 309   3                              setm=1;
 310   3                      }else{
 311   3                              
 312   3                      }
 313   2              }
 314   1      }
 315          void time1int()
 316          {
 317   1              ES=0;
 318   1              TMOD &= 0x0F;
 319   1              TMOD |= 0x60;
 320   1              TH1=0xFF;
 321   1              TL1=0xFF;
 322   1              ET1=1;
 323   1              TR1=1;
 324   1      }
 325          void inital()
 326          {
 327   1              EX0 = 1;        
 328   1          IT0 = 1;                
 329   1          EX1 = 1;        
 330   1          IT1 = 1;
 331   1              EA=1; 
 332   1              sta=0;
 333   1              his=0;
 334   1              sw=0;
 335   1              setw=0;
 336   1              setd=0;
 337   1              time1int();
 338   1              init1602();
 339   1              //ConfigUART(9600);
 340   1      /*      ewrite(Thread1,3);
 341   1              ewrite(Thread2,7);
 342   1              ewrite(Thread3,4);
 343   1              ewrite(Hisn,0);    */
 344   1              td[0]=eread(Thread1);
 345   1              td[1]=eread(Thread2);
 346   1              td[2]=eread(Thread3);
 347   1              temthread=td[0]*1000+td[1]*100+td[2]*10;
 348   1              hisnum=eread(Hisn);
 349   1              
 350   1              LCD_print("    Welcome!      Press to START",1);
 351   1      }
 352          
 353          void mtemp(void)
 354          {
 355   1              uchar i;
 356   1              tem=0;
 357   1              i2c_Init();
 358   1              for(i=0;i<10;i++)
 359   1                      tem=tem+gettemp();
 360   1                      delay(10);
 361   1              otem=tem/1000;
 362   1              tem=100*(otem*otem*otem*(-0.0012)+0.1719*otem*otem+125.7-7.06719*otem);
 363   1              s[0]=tem/1000+0x30;
 364   1              s[1]=tem % 1000/100+0x30;
 365   1              s[2]=0x2E;
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 11:19:44 PAGE 7   

 366   1              s[3]=tem%100/10+0x30;
 367   1              s[4]=0x43;
 368   1              s[5]='\0';
 369   1      }
 370          
 371          void delay(uint a)
 372          {                        
 373   1          uint b;
 374   1          for(;a>0;a--)
 375   1                      for(b=125;b>0;b--);
 376   1      }
 377          
 378          
 379          void i2c_Init(void)
 380          {
 381   1              SCL=1;
 382   1              SDA=1;
 383   1              _nop_();
 384   1              _nop_();
 385   1              _nop_();
 386   1              _nop_();
 387   1              SCL=0;
 388   1              delay(1);
 389   1              SCL=1;
 390   1      }
 391          
 392          
 393          void start_bit(void)
 394          {
 395   1              SDA=1;
 396   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 397   1              SCL=1;
 398   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 399   1              SDA=0;
 400   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 401   1              SCL=0;
 402   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 403   1      }
 404          
 405          void stop_bit(void)
 406          {
 407   1              SCL=0;
 408   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 409   1              SDA=0;
 410   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 411   1              SCL=1;
 412   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 413   1              SDA=1;
 414   1      }
 415          
 416          void send(uchar dat_byte)
 417          {
 418   1              char i,n,dat;
 419   1              n=Nack;
 420   1      send:
 421   1              dat=dat_byte;
 422   1              for(i=0;i<8;i++)
 423   1              {
 424   2                      if(dat&0x80)
 425   2                              bit_out=1;
 426   2                      else
 427   2                              bit_out=0;
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 11:19:44 PAGE 8   

 428   2                      send_bit();
 429   2                      dat=dat<<1;
 430   2              }
 431   1              receive_bit();
 432   1              if(bit_in==1)
 433   1              {
 434   2                      stop_bit();
 435   2                      if(n!=0)
 436   2                      {
 437   3                              n--;
 438   3                              goto Repeat;
 439   3                      }
 440   2              }
 441   1              goto exit;
 442   1      Repeat:
 443   1              start_bit();
 444   1              goto send;
 445   1      exit: ;
 446   1      }
 447          
 448          void send_bit(void)
 449          {
 450   1              if(bit_out==0)
 451   1                      SDA=0;
 452   1              else
 453   1                      SDA=1;
 454   1              _nop_();
 455   1              SCL=1;
 456   1              _nop_();_nop_();_nop_();_nop_();
 457   1              _nop_();_nop_();_nop_();_nop_();
 458   1              SCL=0;
 459   1              _nop_();_nop_();_nop_();_nop_();
 460   1              _nop_();_nop_();_nop_();_nop_();
 461   1      }
 462          
 463          uchar read(void)
 464          {
 465   1              uchar i,dat;
 466   1              dat=0;
 467   1              for(i=0;i<8;i++)
 468   1              {
 469   2                      dat=dat<<1;
 470   2                      receive_bit();
 471   2                      if(bit_in==1)
 472   2                              dat=dat+1;
 473   2              }
 474   1              send_bit();
 475   1              return dat;
 476   1      }
 477          
 478          void receive_bit(void)
 479          {
 480   1              SDA=1;bit_in=1;
 481   1              SCL=1;
 482   1              _nop_();_nop_();_nop_();_nop_();
 483   1              _nop_();_nop_();_nop_();_nop_();
 484   1              bit_in=SDA;
 485   1              _nop_();
 486   1              SCL=0;
 487   1              _nop_();_nop_();_nop_();_nop_();
 488   1              _nop_();_nop_();_nop_();_nop_();
 489   1      }
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 11:19:44 PAGE 9   

 490          
 491          uint getTemp(void)
 492          {
 493   1              start_bit();
 494   1              send(0xB4); 
 495   1              send(0x07);  
 496   1              start_bit();
 497   1              send(0x01);
 498   1              bit_out=0;
 499   1              temL=read();
 500   1              bit_out=0;
 501   1              temH=read();
 502   1              bit_out=1;
 503   1              err=read();
 504   1              stop_bit();
 505   1              return (temH*256+temL)*2-27315;
 506   1      }
 507          
 508          void BlueSend(uchar *str,uchar n)
 509          {
 510   1              uchar i;
 511   1              for(i=0;i<n;i++){
 512   2                      SBUF=str[i];  
 513   2                      delay(70);                                                                             
 514   2              }
 515   1      }
 516          
 517          void BlueReceive()
 518          {
 519   1      
 520   1      }
 521          
 522          void ConfigUART(unsigned int baud)
 523          {
 524   1              SCON = 0x50; 
 525   1              TMOD &= 0x0F; 
 526   1              TMOD |= 0x20; 
 527   1              TH1 = 256 - (11059200/12/32)/baud; 
 528   1              TL1 = TH1; 
 529   1              ET1 = 0; 
 530   1              ES = 1; 
 531   1              TR1 = 1; 
 532   1      }
 533          
 534          void InterruptUART() interrupt 4
 535          {
 536   1              if (RI) 
 537   1              {
 538   2                      RI = 0; 
 539   2                      RxdB = SBUF;
 540   2                      SBUF = 0x21; 
 541   2              }
 542   1              if (TI) 
 543   1              {
 544   2                      TI = 0; 
 545   2              }
 546   1      }
 547          
 548          void cmd_w(uchar cmd)                                  
 549          {
 550   1              //LCDE=0;
 551   1              busy();                                                 
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 11:19:44 PAGE 10  

 552   1              P2=cmd;                                                 
 553   1              RS=0;                                                    
 554   1              RW=0;                                                    
 555   1              LCDE=1;                                               
 556   1              LCDE=0;
 557   1      }
 558          
 559          void init1602(void)                            
 560          {
 561   1              cmd_w(0x01);                                 //Clean
 562   1              cmd_w(0x0c);                                 //Inital Settings
 563   1              cmd_w(0x06);
 564   1              cmd_w(0x38);  
 565   1      }
 566                                         
 567          
 568          void busy(void)                                 //LCD is busy ?
 569          {
 570   1              flag1=0x80;                                    
 571   1              while(flag1&0x80)                          
 572   1              {
 573   2                      P2=0xff;
 574   2                      RS=0;                                               
 575   2                      RW=1;                                             
 576   2                      LCDE=1;                                       
 577   2                      flag1=P2;                                       
 578   2                      LCDE=0;
 579   2              }
 580   1      }
 581          
 582          void dat_w(uchar dat)                                  
 583          {
 584   1              busy();                                               
 585   1      //      LCDE=0;
 586   1              if(flag1==16)
 587   1              {       
 588   2                      P2=0xC0;
 589   2                  RS=0;                                               
 590   2                  RW=0;                                                                                        
 591   2                  LCDE=1;                                               
 592   2                  LCDE=0;
 593   2              }
 594   1              P2=dat;
 595   1              RS=1;                                                       
 596   1              RW=0;                                                                                                    
             - 
 597   1              LCDE=1;                                                   
 598   1              LCDE=0;
 599   1      }
 600          
 601          void LCD_print(uchar *str,uchar n)                                      
 602          {
 603   1              if(n)
 604   1                      cmd_w(0x01);
 605   1              while(*str!='\0')                                   
 606   1              {
 607   2                      dat_w(*str);                                  
 608   2                      str++;                                                
 609   2              }
 610   1      }
 611          
 612          void I2C_Start(void)
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 11:19:44 PAGE 11  

 613          {
 614   1              SDA=1;
 615   1              delay(1);
 616   1              SCL=1;
 617   1              delay(1);
 618   1              SDA=0;
 619   1              delay(1);
 620   1              SCL=0;
 621   1                      
 622   1      }
 623          
 624          void I2C_Stop(void)
 625          {
 626   1              SDA=0;
 627   1              delay(1);
 628   1              SCL=1;
 629   1              delay(1);
 630   1              SDA=1;
 631   1              delay(1);       
 632   1      }
 633          
 634          void I2C_Ack(void)
 635          {
 636   1              uchar i;
 637   1              SCL=1;
 638   1              delay(1);
 639   1              while((SDA==1)&&(i<255)) i++;
 640   1              SCL=0;
 641   1              delay(1);
 642   1              SDA=1;
 643   1      }
 644          
 645          void Write_Byte(uchar wdata)
 646          {
 647   1              uchar i;
 648   1              EEP=wdata;
 649   1              for(i=0;i<8;i++)
 650   1              {       
 651   2                      SDA=EEP_7;
 652   2                      SCL=1;
 653   2                      delay(1);
 654   2                      EEP<<=1;
 655   2                      SCL=0;
 656   2                      delay(1);
 657   2              }
 658   1              SDA=1;
 659   1              delay(1);
 660   1              SCL=0;
 661   1      }
 662          
 663          uchar Read_Byte(void)
 664          {
 665   1              uchar i;
 666   1              SDA=1;
 667   1              EEP=0;
 668   1              for(i=0;i<8;i++)
 669   1              {
 670   2                      EEP<<=1;
 671   2                      SCL=1;
 672   2                  delay(1);
 673   2                      EEP_0=SDA;
 674   2                      SCL=0;
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 11:19:44 PAGE 12  

 675   2                      delay(1);
 676   2              }
 677   1              return EEP;
 678   1      }
 679          
 680          void ewrite(uchar addr,uchar dat)
 681          {
 682   1              I2C_Start();
 683   1              Write_Byte(0xa0);
 684   1              I2C_Ack();
 685   1              Write_Byte(addr);  
 686   1              I2C_Ack();
 687   1              Write_Byte(dat);
 688   1              I2C_Ack();
 689   1              I2C_Stop();
 690   1      }
 691          
 692          uchar eread(uchar addr)
 693          {
 694   1              uchar dat;
 695   1              I2C_Start();
 696   1              Write_Byte(0xa0);
 697   1              I2C_Ack();
 698   1              Write_Byte(addr);  
 699   1              I2C_Ack();
 700   1              I2C_Start();
 701   1              Write_Byte(0xa1);
 702   1              I2C_Ack();
 703   1              dat=Read_Byte();
 704   1              I2C_Stop();
 705   1              return dat;
 706   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2156    ----
   CONSTANT SIZE    =     90    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     32      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          #define uint unsigned int
   4          #define uchar unsigned char
   5          #define Nack 10 
   6          #define ACK(); SDA=0;NOP_3();SCL=1;NOP_3();SCL=0;
   7          
   8          #define Thread1 0x01
   9          #define Thread2 0x02
  10          #define Thread3 0x03
  11          
  12          #define Hisn 0x00
  13          #define EEPDa 0x04
  14          #define Naddr 0x30
  15          #define Nowaddr 0xE0
  16             
  17          sbit RS=P1^2;             
  18          sbit RW=P1^1;          
  19          sbit LCDE=P1^0;
  20          sbit LED=P1^6;
  21          sbit BUZZ=P1^7;
  22          sbit INT2=P3^5;       
  23          
  24          sbit SCL=P1^3;        
  25          sbit SDA=P1^4;  
  26          
  27          uchar bdata EEP;
  28          sbit EEP_7 = EEP^7;
  29          sbit EEP_0 = EEP^0;     
  30          
  31          bdata uchar flag;
  32          sbit bit_out=flag^1;
  33          sbit bit_in=flag^0;
  34          sbit sta=flag^2;
  35          sbit set=flag^3;
  36          sbit his=flag^4;
  37          sbit sw=flag^5;
  38          sbit setw=flag^6;
  39          sbit setd=flag^7;
  40          
  41          bdata uchar flag2;
  42          sbit setm=flag2^0;
  43          sbit bluea=flag2^1;
  44          sbit xname=flag2^2;
  45          
  46          uchar temH,temL,err;
  47          
  48          void busy(void);
  49          void cmd_w(uchar cmd);
  50          void init1602(void);
  51          void dat_wrt(uchar dat); 
  52          void LCD_print(uchar *str,uchar n);
  53          
  54          void I2C_Start(void);
  55          void I2C_Stop(void);
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 2   

  56          void I2C_Ack(void);
  57          void Write_Byte(uchar wdata);
  58          uchar Read_Byte(void);
  59          uchar eread(uchar addr);
  60          void ewrite(uchar addr,uchar dat);
  61          
  62          void ConfigUART(unsigned int baud);
  63          void BlueSend(uchar *str);
  64          void delay(uint a);
  65          void i2c_Init(void);
  66          void start_bit(void);
  67          void stop_bit(void);
  68          void send(uchar dat_byte);
  69          void send_bit(void);
  70          uchar read(void);
  71          void receive_bit(void);
  72          uint gettemp(void);
  73          void mtemp(void);
  74          void hisswitch(void);
  75          void SendHis();
  76          void inital();
  77          void BlueReceive();
  78          void time1int();
  79          void ewrstr(uchar addr,uchar* str);
  80          void erdstr(uchar addr);
  81          void dismain();
  82          
  83          uchar flag1;
  84          uchar RxdB;
  85          uint tem;
  86          float otem;
  87          uint temthread;
  88          uchar hisnum;
  89          uchar s[10];
  90          uchar sn[9];
  91          uchar sel;
  92          uchar td[3];
  93          uchar index[2];
  94          
  95          void main()
  96          {
  97   1              
  98   1              inital();
  99   1              
 100   1              while(1)
 101   1              {    
 102   2                      if(sta)
 103   2                      {
 104   3                              LCD_print("  Result:",1);
 105   3                              mtemp();
 106   3                              sta=0;
 107   3                              LCD_print(s,0);
 108   3                              if(tem>temthread){
 109   4                                      BUZZ=0;
 110   4                                      LED=0;
 111   4                                      delay(1000);
 112   4                                      BUZZ=1;
 113   4                                      LED=1;
 114   4                              }  
 115   3                              
 116   3                              hisnum++;
 117   3                              if(hisnum==9)
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 3   

 118   3                                      hisnum=1;  
 119   3                              
 120   3                              ewrite(Hisn,hisnum);
 121   3                          ewrite(EEPDa+hisnum*3,tem/1000);  
 122   3                          ewrite(EEPDa+hisnum*3+1,tem % 1000/100);  
 123   3                              ewrite(EEPDa+hisnum*3+2,tem%100/10); 
 124   3      
 125   3                              ewrstr(Naddr+hisnum*8,sn);
 126   3                              delay(1500);
 127   3                              dismain();
 128   3                                      
 129   3                      }else
 130   2                      if(set)
 131   2                      {
 132   3                              if(!setd)
 133   3                              {
 134   4                                      s[0]=td[0]+0x30;
 135   4                                      s[1]=td[1]+0x30;
 136   4                                      s[3]=td[2]+0x30;
 137   4                                      s[2]='.';
 138   4                                      s[4]='C';
 139   4                                      s[5]=0;
 140   4                                      LCD_print("   Set:",1);
 141   4                                      LCD_print(s,0);
 142   4                                      setd=1;
 143   4                              }
 144   3                              if(setw)
 145   3                              {
 146   4                                      td[2]+=1;
 147   4                                      if(td[2]==10)
 148   4                                      {
 149   5                                              td[1]+=1;
 150   5                                              td[2]=0;
 151   5                                      }
 152   4                                      ewrite(Thread3,td[2]);
 153   4                                      ewrite(Thread2,td[1]);
 154   4                                      setd=0;
 155   4                                      setw=0;
 156   4                              }
 157   3                              if(setm)
 158   3                              {
 159   4                                      td[2]-=1;
 160   4                                      if(!td[2])
 161   4                                      {
 162   5                                              td[1]-=1;
 163   5                                              td[2]=9;
 164   5                                      }
 165   4                                      ewrite(Thread3,td[2]);
 166   4                                      ewrite(Thread2,td[1]);
 167   4                                      setd=0;
 168   4                                      setm=0;
 169   4                              }
 170   3      
 171   3                      }else
 172   2                      if(his)
 173   2                      {       
 174   3                              if(sw)
 175   3                              {
 176   4                                      if(sel==0)
 177   4                                              sel=8;
 178   4                                      s[0]=eread(EEPDa+sel*3)+0x30;
 179   4                                      s[1]=eread(EEPDa+sel*3+1)+0x30;
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 4   

 180   4                                      s[3]=eread(EEPDa+sel*3+2)+0x30;
 181   4                                      s[2]='.';
 182   4                                      s[4]='C';
 183   4                                      s[5]='\0';
 184   4      
 185   4                                      if(sel<=hisnum){
 186   5                                              index[0]=hisnum+1-sel+0x30;
 187   5                                      }else{
 188   5                                              index[0]=9+hisnum-sel+0x30;
 189   5                                      }
 190   4                                      LCD_print(" History: ",1);      
 191   4                                      erdstr(Naddr+sel*8); 
 192   4                                      LCD_print(s,0);
 193   4                                      LCD_print("   ",0);
 194   4                                      index[1]=0;
 195   4                                      LCD_print(index,0);
 196   4                                      LCD_print("  ",0);
 197   4                                      LCD_print(sn,0);        
 198   4                                      sw=0;   
 199   4                                      sel--;             
 200   4                              }
 201   3                              if(bluea)
 202   3                              {
 203   4                                      LCD_print("   Bluetooth",1);
 204   4                                      while(bluea);
 205   4                                      LCD_print("       Sending...",0);
 206   4                                      SendHis();
 207   4                                      LCD_print("   Bluetooth            OK!",1);
 208   4                                      BUZZ=0;
 209   4                                      delay(1000);
 210   4                                      BUZZ=1; 
 211   4                                      time1int();
 212   4                                      delay(5000);
 213   4                                      LED=1;                          
 214   4                                      sel=hisnum;
 215   4                                      sw=1;
 216   4                              }
 217   3                      }else{
 218   3                              if(xname){ 
 219   4                                      BlueReceive();
 220   4                                      time1int();
 221   4                                      ewrstr(Nowaddr,s);
 222   4                                      xname=0;  
 223   4                                      erdstr(Nowaddr);
 224   4                                      LCD_print(sn,0);
 225   4                                      cmd_w(0x4C+0x80);
 226   4                                      LCD_print("OK!",0);
 227   4                                      delay(2000);
 228   4                                      dismain();
 229   4                              }
 230   3                      }
 231   2              }
 232   1      }
 233          
 234          void erdstr(uchar addr)
 235          {
 236   1              uchar i=0;
 237   1              do{      
 238   2                      sn[i]=eread(addr+i);
 239   2                      i++;    
 240   2              }while(sn[i-1]!=0);
 241   1      }
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 5   

 242          
 243          void ewrstr(uchar addr,uchar* str)
 244          {
 245   1              uchar i=0;
 246   1              do{
 247   2                      ewrite(addr+i,str[i]);
 248   2                      i++;
 249   2              }while(str[i-1]!=0);
 250   1      }
 251          
 252          void SendHis()
 253          {
 254   1              uchar i,j;
 255   1              j=hisnum;
 256   1              for(i=0;i<8;i++,j--)
 257   1              {
 258   2                      if(j==0)
 259   2                              j=8;
 260   2                      s[0]=eread(EEPDa+j*3)+0x30;
 261   2                      s[1]=eread(EEPDa+j*3+1)+0x30;
 262   2                      s[3]=eread(EEPDa+j*3+2)+0x30;
 263   2                      s[2]='.';
 264   2                      s[4]='C';
 265   2                      s[5]=0x20;
 266   2                      s[6]=i+1+0x30;
 267   2                      s[7]=0x20;
 268   2                      s[8]=0;
 269   2                      BlueSend(s);
 270   2                      erdstr(Naddr+j*8);
 271   2                      BlueSend(sn);
 272   2                      s[0]='\r';
 273   2                      s[1]='\n';
 274   2                      s[2]=0;
 275   2                      BlueSend(s);
 276   2                      
 277   2              }
 278   1              //s[0]=0x20;s[1]=0x20;s[2]=0x20;s[3]=0;
 279   1              s[0]='O';
 280   1              s[1]='K';
 281   1              s[2]='!';
 282   1              s[3]='\0';
 283   1              BlueSend(s);
 284   1      }
 285          
 286          void int0() interrupt 0
 287          {
 288   1              delay(100);
 289   1              if(INT0==0)
 290   1              {
 291   2                      if(his)
 292   2                      {
 293   3                              //LED=1;
 294   3                              if(bluea){
 295   4      
 296   4                              }else{
 297   4                                      set=1;
 298   4                                      setd=0;
 299   4                                      his=0;
 300   4                              }
 301   3                      }else
 302   2                      if(set){
 303   3                              set=0;
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 6   

 304   3                              his=0;
 305   3                              dismain();
 306   3                      }else{
 307   3                              his=1;
 308   3                              //LED=0;
 309   3                              sel=hisnum;
 310   3                              sw=1;
 311   3                      }
 312   2              }
 313   1      }
 314          
 315          void dismain()
 316          {
 317   1              erdstr(Nowaddr);
 318   1              LCD_print(sn,1);
 319   1              cmd_w(0x88);
 320   1              LCD_print("Welcome!  Press to START",0);
 321   1      }
 322          
 323          void int1() interrupt 2
 324          {
 325   1              delay(100);
 326   1              if(INT1==0)
 327   1              {
 328   2                      if(his)
 329   2                      {
 330   3                              if(bluea){
 331   4                                      bluea=0;
 332   4                              }else{
 333   4                                      sw=1;
 334   4                              }                       
 335   3                      }else
 336   2                      if(set)
 337   2                      {
 338   3                              setw=1;
 339   3                      }else{
 340   3                              if(xname){
 341   4      
 342   4                              }else{
 343   4                                      sta=1;
 344   4                              }
 345   3                      }
 346   2              }
 347   1      } 
 348          
 349          void int2() interrupt 3
 350          {
 351   1              delay(100);
 352   1              if(INT2==0)
 353   1              {
 354   2                      if(his)
 355   2                      {
 356   3                              if(bluea){
 357   4      
 358   4                              }else{
 359   4                                      bluea=1;
 360   4                                      LED=0;
 361   4                                      ConfigUART(9600);
 362   4                              }                               
 363   3                      }else
 364   2                      if(set)
 365   2                      {
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 7   

 366   3                              setm=1;
 367   3                      }else{
 368   3                              xname=1;
 369   3                              LCD_print("Name: ",1);
 370   3                              ConfigUART(9600);
 371   3                      }
 372   2              }
 373   1      }
 374          void time1int()
 375          {
 376   1              ES=0;
 377   1              TMOD &= 0x0F;
 378   1              TMOD |= 0x60;
 379   1              TH1=0xFF;
 380   1              TL1=0xFF;
 381   1              ET1=1;
 382   1              TR1=1;
 383   1      }
 384          void inital()
 385          {
 386   1              EX0 = 1;        
 387   1          IT0 = 1;                
 388   1          EX1 = 1;        
 389   1          IT1 = 1;
 390   1              EA=1; 
 391   1              sta=0;
 392   1              his=0;
 393   1              sw=0;
 394   1              setw=0;
 395   1              setd=0;
 396   1              time1int();
 397   1              init1602();
 398   1              //ConfigUART(9600);
 399   1              /*ewrite(Thread1,3);
 400   1              ewrite(Thread2,7);
 401   1              ewrite(Thread3,6);
 402   1              ewrite(Hisn,0); */   
 403   1              td[0]=eread(Thread1);
 404   1              td[1]=eread(Thread2);
 405   1              td[2]=eread(Thread3);
 406   1              temthread=td[0]*1000+td[1]*100+td[2]*10;
 407   1              hisnum=eread(Hisn);
 408   1              
 409   1              dismain();
 410   1      }
 411          
 412          void mtemp(void)
 413          {
 414   1              uchar i;
 415   1              tem=0;
 416   1              i2c_Init();
 417   1              for(i=0;i<10;i++)
 418   1                      tem=tem+gettemp();
 419   1                      delay(10);
 420   1              otem=tem/1000;
 421   1              tem=100*(otem*otem*otem*(-0.0012)+0.1719*otem*otem+125.7-7.06719*otem);
 422   1              s[0]=tem/1000+0x30;
 423   1              s[1]=tem % 1000/100+0x30;
 424   1              s[2]=0x2E;
 425   1              s[3]=tem%100/10+0x30;
 426   1              s[4]=0x43;
 427   1              s[5]='\0';
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 8   

 428   1      }
 429          
 430          void delay(uint a)
 431          {                        
 432   1          uint b;
 433   1          for(;a>0;a--)
 434   1                      for(b=125;b>0;b--);
 435   1      }
 436          
 437          
 438          void i2c_Init(void)
 439          {
 440   1              SCL=1;
 441   1              SDA=1;
 442   1              _nop_();
 443   1              _nop_();
 444   1              _nop_();
 445   1              _nop_();
 446   1              SCL=0;
 447   1              delay(1);
 448   1              SCL=1;
 449   1      }
 450          
 451          
 452          void start_bit(void)
 453          {
 454   1              SDA=1;
 455   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 456   1              SCL=1;
 457   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 458   1              SDA=0;
 459   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 460   1              SCL=0;
 461   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 462   1      }
 463          
 464          void stop_bit(void)
 465          {
 466   1              SCL=0;
 467   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 468   1              SDA=0;
 469   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 470   1              SCL=1;
 471   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 472   1              SDA=1;
 473   1      }
 474          
 475          void send(uchar dat_byte)
 476          {
 477   1              char i,n,dat;
 478   1              n=Nack;
 479   1      send:
 480   1              dat=dat_byte;
 481   1              for(i=0;i<8;i++)
 482   1              {
 483   2                      if(dat&0x80)
 484   2                              bit_out=1;
 485   2                      else
 486   2                              bit_out=0;
 487   2                      send_bit();
 488   2                      dat=dat<<1;
 489   2              }
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 9   

 490   1              receive_bit();
 491   1              if(bit_in==1)
 492   1              {
 493   2                      stop_bit();
 494   2                      if(n!=0)
 495   2                      {
 496   3                              n--;
 497   3                              goto Repeat;
 498   3                      }
 499   2              }
 500   1              goto exit;
 501   1      Repeat:
 502   1              start_bit();
 503   1              goto send;
 504   1      exit: ;
 505   1      }
 506          
 507          void send_bit(void)
 508          {
 509   1              if(bit_out==0)
 510   1                      SDA=0;
 511   1              else
 512   1                      SDA=1;
 513   1              _nop_();
 514   1              SCL=1;
 515   1              _nop_();_nop_();_nop_();_nop_();
 516   1              _nop_();_nop_();_nop_();_nop_();
 517   1              SCL=0;
 518   1              _nop_();_nop_();_nop_();_nop_();
 519   1              _nop_();_nop_();_nop_();_nop_();
 520   1      }
 521          
 522          uchar read(void)
 523          {
 524   1              uchar i,dat;
 525   1              dat=0;
 526   1              for(i=0;i<8;i++)
 527   1              {
 528   2                      dat=dat<<1;
 529   2                      receive_bit();
 530   2                      if(bit_in==1)
 531   2                              dat=dat+1;
 532   2              }
 533   1              send_bit();
 534   1              return dat;
 535   1      }
 536          
 537          void receive_bit(void)
 538          {
 539   1              SDA=1;bit_in=1;
 540   1              SCL=1;
 541   1              _nop_();_nop_();_nop_();_nop_();
 542   1              _nop_();_nop_();_nop_();_nop_();
 543   1              bit_in=SDA;
 544   1              _nop_();
 545   1              SCL=0;
 546   1              _nop_();_nop_();_nop_();_nop_();
 547   1              _nop_();_nop_();_nop_();_nop_();
 548   1      }
 549          
 550          uint getTemp(void)
 551          {
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 10  

 552   1              start_bit();
 553   1              send(0xB4); 
 554   1              send(0x07);  
 555   1              start_bit();
 556   1              send(0x01);
 557   1              bit_out=0;
 558   1              temL=read();
 559   1              bit_out=0;
 560   1              temH=read();
 561   1              bit_out=1;
 562   1              err=read();
 563   1              stop_bit();
 564   1              return (temH*256+temL)*2-27315;
 565   1      }
 566          
 567          void BlueSend(uchar *str)
 568          {
 569   1              uchar i=0;
 570   1              while(str[i]!=0){
 571   2                      SBUF=str[i++];  
 572   2                      delay(70);                                                                     
 573   2              }
 574   1      }
 575          
 576          void BlueReceive()
 577          {
 578   1              uchar i=0;
 579   1              while(1){
 580   2                      while(!RI);
 581   2                      RxdB=SBUF;
 582   2                      RI=0;
 583   2                      if(RxdB=='@')
 584   2                              break;
 585   2                      s[i++]=RxdB;
 586   2              }
 587   1              s[i]=0;
 588   1      }
 589          
 590          void ConfigUART(unsigned int baud)
 591          {
 592   1              SCON = 0x50; 
 593   1              TMOD &= 0x0F; 
 594   1              TMOD |= 0x20; 
 595   1              TH1 = 256 - (11059200/12/32)/baud; 
 596   1              TL1 = TH1; 
 597   1              ET1 = 0; 
 598   1              ES = 1; 
 599   1              TR1 = 1; 
 600   1      }
 601          
 602          void InterruptUART() interrupt 4
 603          {
 604   1              if (RI) 
 605   1              {
 606   2                      //RI = 0; 
 607   2                      //RxdB = SBUF;
 608   2                      //if(bluea==1&RxdB=='@')
 609   2                              bluea=0;
 610   2                      //SBUF = 0x21; 
 611   2              }
 612   1              if (TI) 
 613   1              {
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 11  

 614   2                      TI = 0; 
 615   2              }
 616   1      }
 617          
 618          void cmd_w(uchar cmd)                                  
 619          {
 620   1              //LCDE=0;
 621   1              busy();                                                 
 622   1              P2=cmd;                                                 
 623   1              RS=0;                                                    
 624   1              RW=0;                                                    
 625   1              LCDE=1;                                               
 626   1              LCDE=0;
 627   1      }
 628          
 629          void init1602(void)                            
 630          {
 631   1              cmd_w(0x01);                                 //Clean
 632   1              cmd_w(0x0c);                                 //Inital Settings
 633   1              cmd_w(0x06);
 634   1              cmd_w(0x38);  
 635   1      }
 636                                         
 637          
 638          void busy(void)                                 //LCD is busy ?
 639          {
 640   1              flag1=0x80;                                    
 641   1              while(flag1&0x80)                          
 642   1              {
 643   2                      P2=0xff;
 644   2                      RS=0;                                               
 645   2                      RW=1;                                             
 646   2                      LCDE=1;                                       
 647   2                      flag1=P2;                                       
 648   2                      LCDE=0;
 649   2              }
 650   1      }
 651          
 652          void dat_w(uchar dat)                                  
 653          {
 654   1              busy();                                               
 655   1      //      LCDE=0;
 656   1              if(flag1==16)
 657   1              {       
 658   2                      P2=0xC0;
 659   2                  RS=0;                                               
 660   2                  RW=0;                                                                                        
 661   2                  LCDE=1;                                               
 662   2                  LCDE=0;
 663   2              }
 664   1              P2=dat;
 665   1              RS=1;                                                       
 666   1              RW=0;                                                                                                    
             - 
 667   1              LCDE=1;                                                   
 668   1              LCDE=0;
 669   1      }
 670          
 671          void LCD_print(uchar *str,uchar n)                                      
 672          {
 673   1              if(n)
 674   1                      cmd_w(0x01);
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 12  

 675   1              while(*str!='\0')                                   
 676   1              {
 677   2                      dat_w(*str);                                  
 678   2                      str++;                                                
 679   2              }
 680   1      }
 681          
 682          void I2C_Start(void)
 683          {
 684   1              SDA=1;
 685   1              delay(1);
 686   1              SCL=1;
 687   1              delay(1);
 688   1              SDA=0;
 689   1              delay(1);
 690   1              SCL=0;
 691   1                      
 692   1      }
 693          
 694          void I2C_Stop(void)
 695          {
 696   1              SDA=0;
 697   1              delay(1);
 698   1              SCL=1;
 699   1              delay(1);
 700   1              SDA=1;
 701   1              delay(1);       
 702   1      }
 703          
 704          void I2C_Ack(void)
 705          {
 706   1              uchar i;
 707   1              SCL=1;
 708   1              delay(1);
 709   1              while((SDA==1)&&(i<255)) i++;
 710   1              SCL=0;
 711   1              delay(1);
 712   1              SDA=1;
 713   1      }
 714          
 715          void Write_Byte(uchar wdata)
 716          {
 717   1              uchar i;
 718   1              EEP=wdata;
 719   1              for(i=0;i<8;i++)
 720   1              {       
 721   2                      SDA=EEP_7;
 722   2                      SCL=1;
 723   2                      delay(1);
 724   2                      EEP<<=1;
 725   2                      SCL=0;
 726   2                      delay(1);
 727   2              }
 728   1              SDA=1;
 729   1              delay(1);
 730   1              SCL=0;
 731   1      }
 732          
 733          uchar Read_Byte(void)
 734          {
 735   1              uchar i;
 736   1              SDA=1;
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 18:31:51 PAGE 13  

 737   1              EEP=0;
 738   1              for(i=0;i<8;i++)
 739   1              {
 740   2                      EEP<<=1;
 741   2                      SCL=1;
 742   2                  delay(1);
 743   2                      EEP_0=SDA;
 744   2                      SCL=0;
 745   2                      delay(1);
 746   2              }
 747   1              return EEP;
 748   1      }
 749          
 750          void ewrite(uchar addr,uchar dat)
 751          {
 752   1              I2C_Start();
 753   1              Write_Byte(0xa0);
 754   1              I2C_Ack();
 755   1              Write_Byte(addr);  
 756   1              I2C_Ack();
 757   1              Write_Byte(dat);
 758   1              I2C_Ack();
 759   1              I2C_Stop();
 760   1      }
 761          
 762          uchar eread(uchar addr)
 763          {
 764   1              uchar dat;
 765   1              I2C_Start();
 766   1              Write_Byte(0xa0);
 767   1              I2C_Ack();
 768   1              Write_Byte(addr);  
 769   1              I2C_Ack();
 770   1              I2C_Start();
 771   1              Write_Byte(0xa1);
 772   1              I2C_Ack();
 773   1              dat=Read_Byte();
 774   1              I2C_Stop();
 775   1              return dat;
 776   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2443    ----
   CONSTANT SIZE    =    131    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     42      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

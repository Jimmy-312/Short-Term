C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          #define uint unsigned int
   4          #define uchar unsigned char
   5          #define Nack 10 
   6          #define ACK(); SDA=0;NOP_3();SCL=1;NOP_3();SCL=0;
   7          
   8          #define Thread1 0x01
   9          #define Thread2 0x02
  10          #define Thread3 0x03
  11          
  12          #define Hisn 0x00
  13          #define EEPDa 0x04
  14             
  15          sbit RS=P1^2;             
  16          sbit RW=P1^1;          
  17          sbit LCDE=P1^0;
  18          sbit LED=P1^6;
  19          sbit BUZZ=P1^7;
  20          sbit INT2=P3^5;       
  21          
  22          sbit SCL=P1^3;        
  23          sbit SDA=P1^4;  
  24          
  25          uchar bdata EEP;
  26          sbit EEP_7 = EEP^7;
  27          sbit EEP_0 = EEP^0;     
  28          
  29          bdata uchar flag;
  30          sbit bit_out=flag^1;
  31          sbit bit_in=flag^0;
  32          sbit sta=flag^2;
  33          sbit set=flag^3;
  34          sbit his=flag^4;
  35          sbit sw=flag^5;
  36          sbit setw=flag^6;
  37          sbit setd=flag^7;
  38          
  39          bdata uchar flag2;
  40          sbit setm=flag2^0;
  41          sbit bluea=flag2^1;
  42          
  43          uchar temH,temL,err;
  44          
  45          bit RxdOrTxd = 0; 
  46          bit RxdEnd = 0; 
  47          bit TxdEnd = 0; 
  48          uchar RxdBuf = 0; 
  49          uchar TxdBuf = 0; 
  50          sbit PIN_RXD = P3^0; 
  51          sbit PIN_TXD = P3^1;
  52          
  53          void busy(void);
  54          void cmd_w(uchar cmd);
  55          void init1602(void);
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 2   

  56          void dat_wrt(uchar dat); 
  57          void LCD_print(uchar *str,uchar n);
  58          
  59          void I2C_Start(void);
  60          void I2C_Stop(void);
  61          void I2C_Ack(void);
  62          void Write_Byte(uchar wdata);
  63          uchar Read_Byte(void);
  64          uchar eread(uchar addr);
  65          void ewrite(uchar addr,uchar dat);
  66          
  67          void ConfigUART(unsigned int baud);
  68          void StartTXD(unsigned char dat);
  69          void StartRXD();
  70          void BlueSend(uchar *str,uchar n);
  71          void delay(uint a);
  72          void i2c_Init(void);
  73          void start_bit(void);
  74          void stop_bit(void);
  75          void send(uchar dat_byte);
  76          void send_bit(void);
  77          uchar read(void);
  78          void receive_bit(void);
  79          uint gettemp(void);
  80          void mtemp(void);
  81          void hisswitch(void);
  82          void SendHis();
  83          
  84          uchar flag1;
  85          uint tem;
  86          float otem;
  87          uint temthread;
  88          uchar hisnum;
  89          uchar s[10];
  90          uchar sel;
  91          uchar td[3];
  92          uchar index;
  93          
  94          void main()
  95          {
  96   1              
  97   1              EX0 = 1;        
  98   1          IT0 = 1;                
  99   1          EX1 = 1;        
 100   1          IT1 = 1;
 101   1              EA=1; 
 102   1              sta=0;
 103   1              his=0;
 104   1              sw=0;
 105   1              setw=0;
 106   1              setd=0;
 107   1              ConfigUART(9600);
 108   1              TMOD &= 0x0F;
 109   1              TMOD |= 0x60;
 110   1              TH1=0xFF;
 111   1              TL1=0xFF;
 112   1              ET1=1;
 113   1              TR1=1;
 114   1              init1602();
 115   1              
 116   1      /*      ewrite(Thread1,3);
 117   1              ewrite(Thread2,7);
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 3   

 118   1              ewrite(Thread3,4);
 119   1              ewrite(Hisn,0);    */
 120   1              td[0]=eread(Thread1);
 121   1              td[1]=eread(Thread2);
 122   1              td[2]=eread(Thread3);
 123   1              temthread=td[0]*1000+td[1]*100+td[2]*10;
 124   1              hisnum=eread(Hisn);
 125   1              
 126   1              LCD_print("    Welcome!      Press to START",1);
 127   1              
 128   1              while(1)
 129   1              {    
 130   2              /*               */
 131   2                      if(sta)
 132   2                      {
 133   3                              LCD_print("Result:",1);
 134   3                              mtemp();
 135   3                              //BlueSend(s,5);
 136   3                              sta=0;
 137   3                              LCD_print(s,0);
 138   3                              if(tem>temthread){
 139   4                                      BUZZ=0;
 140   4                                      LED=0;
 141   4                                      delay(1000);
 142   4                                      BUZZ=1;
 143   4                                      LED=1;
 144   4                              }  
 145   3                              
 146   3                              hisnum++;
 147   3                              if(hisnum==9)
 148   3                                      hisnum=1;  
 149   3                              
 150   3                              ewrite(Hisn,hisnum);
 151   3                          ewrite(EEPDa+hisnum*3,tem/1000);  
 152   3                          ewrite(EEPDa+hisnum*3+1,tem % 1000/100);  
 153   3                              ewrite(EEPDa+hisnum*3+2,tem%100/10); 
 154   3                                      
 155   3                      }else
 156   2                      if(set)
 157   2                      {
 158   3                              if(!setd)
 159   3                              {
 160   4                                      s[0]=td[0]+0x30;
 161   4                                      s[1]=td[1]+0x30;
 162   4                                      s[3]=td[2]+0x30;
 163   4                                      s[2]='.';
 164   4                                      s[4]='C';
 165   4                                      s[5]=0;
 166   4                                      LCD_print("Set:",1);
 167   4                                      LCD_print(s,0);
 168   4                                      setd=1;
 169   4                              }
 170   3                              if(setw)
 171   3                              {
 172   4                                      td[2]+=1;
 173   4                                      if(td[2]==10)
 174   4                                      {
 175   5                                              td[1]+=1;
 176   5                                              td[2]=0;
 177   5                                      }
 178   4                                      ewrite(Thread3,td[2]);
 179   4                                      ewrite(Thread2,td[1]);
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 4   

 180   4                                      setd=0;
 181   4                                      setw=0;
 182   4                              }
 183   3                              if(setm)
 184   3                              {
 185   4                                      td[2]-=1;
 186   4                                      if(!td[2])
 187   4                                      {
 188   5                                              td[1]-=1;
 189   5                                              td[2]=9;
 190   5                                      }
 191   4                                      ewrite(Thread3,td[2]);
 192   4                                      ewrite(Thread2,td[1]);
 193   4                                      setd=0;
 194   4                                      setm=0;
 195   4                              }
 196   3      
 197   3                      }else
 198   2                      if(his)
 199   2                      {       
 200   3                              if(sw)
 201   3                              {
 202   4                                      if(sel==0)
 203   4                                              sel=8;
 204   4                                      s[0]=eread(EEPDa+sel*3)+0x30;
 205   4                                      s[1]=eread(EEPDa+sel*3+1)+0x30;
 206   4                                      s[3]=eread(EEPDa+sel*3+2)+0x30;
 207   4                                      s[2]='.';
 208   4                                      s[4]='C';
 209   4                                      s[5]='\0';
 210   4                                      if(sel<=hisnum){
 211   5                                              index=hisnum+1-sel+0x30;
 212   5                                      }else{
 213   5                                              index=9+hisnum-sel+0x30;
 214   5                                      }
 215   4                                      sel--;
 216   4                                      LCD_print("History:",1);        
 217   4                                      LCD_print(s,0);
 218   4                                      s[0]=0x20;
 219   4                                      s[1]=0x20;
 220   4                                      s[2]=0x20;
 221   4                                      s[3]=0x20;
 222   4                                      s[4]=index;
 223   4                                      s[5]=0;
 224   4                                      LCD_print(s,0);
 225   4                                      sw=0;                      
 226   4                              }
 227   3                              if(bluea)
 228   3                              {
 229   4                                      while (PIN_RXD&bluea); 
 230   4                                      StartRXD(); 
 231   4                                      while (!RxdEnd&bluea);
 232   4                                      
 233   4                                      SendHis();
 234   4                                      delay(5000);    
 235   4                              }
 236   3                      }else{
 237   3                              
 238   3                      }
 239   2              }
 240   1      }
 241          
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 5   

 242          void SendHis()
 243          {
 244   1              uchar i,j;
 245   1              j=hisnum;
 246   1              for(i=0;i<8;i++,j++)
 247   1              {
 248   2                      if(j==9)
 249   2                              j=1;
 250   2                      s[0]=eread(EEPDa+j*3)+0x30;
 251   2                      s[1]=eread(EEPDa+j*3+1)+0x30;
 252   2                      s[3]=eread(EEPDa+j*3+2)+0x30;
 253   2                      s[2]='.';
 254   2                      s[4]='C';
 255   2                      s[5]=0x20;
 256   2                      s[6]=i+1+0x30;
 257   2                      s[7]='\r';
 258   2                      s[8]='\n';
 259   2                      s[9]='\0';
 260   2                      BlueSend(s,10);
 261   2              }
 262   1              //s[0]=0x20;s[1]=0x20;s[2]=0x20;s[3]=0;
 263   1              LCD_print("   ",0);
 264   1              s[0]='O';
 265   1              s[1]='K';
 266   1              s[2]='!';
 267   1              s[3]='\0';
 268   1              BlueSend(s,4);
 269   1              LCD_print(s,0);
 270   1      
 271   1      }
 272          
 273          void int0() interrupt 0
 274          {
 275   1              delay(100);
 276   1              if(INT0==0)
 277   1              {
 278   2              LED=~LED;
 279   2                      if(his)
 280   2                      {
 281   3                              set=1;
 282   3                              setd=0;
 283   3                              his=0;
 284   3                      }else
 285   2                      if(set){
 286   3                              set=0;
 287   3                              his=0;
 288   3                              LCD_print("    Welcome!      Press to START",1);
 289   3                      }else{
 290   3                              his=1;
 291   3                      }
 292   2                      if(his)
 293   2                      {
 294   3                              sel=hisnum;
 295   3                              sw=1;
 296   3                      }
 297   2              }
 298   1      }
 299          
 300          void int1() interrupt 2
 301          {
 302   1              delay(100);
 303   1              if(INT1==0)
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 6   

 304   1              {
 305   2                      if(his)
 306   2                      {
 307   3                              sw=1;                   
 308   3                      }else
 309   2                      if(set)
 310   2                      {
 311   3                              setw=1;
 312   3                      }else{
 313   3                              sta=1;
 314   3                      }
 315   2              }
 316   1      } 
 317          
 318          void int2() interrupt 3
 319          {
 320   1              delay(100);
 321   1              if(INT2==0)
 322   1              {
 323   2                      if(his)
 324   2                      {
 325   3                              if(bluea){
 326   4                                      bluea=0;
 327   4                                      sel=hisnum;
 328   4                                      sw=1;
 329   4                              }else{
 330   4                                      bluea=1;
 331   4                                      LCD_print("Bluetooth",1);
 332   4                              }                               
 333   3                      }else
 334   2                      if(set)
 335   2                      {
 336   3                              setm=1;
 337   3                      }else{
 338   3                              
 339   3                      }
 340   2              }
 341   1      }
 342          
 343          void mtemp(void)
 344          {
 345   1              uchar i;
 346   1              tem=0;
 347   1              i2c_Init();
 348   1              for(i=0;i<10;i++)
 349   1                      tem=tem+gettemp();
 350   1                      delay(10);
 351   1              otem=tem/1000;
 352   1              tem=100*(otem*otem*otem*(-0.0012)+0.1719*otem*otem+125.7-7.06719*otem);
 353   1              s[0]=tem/1000+0x30;
 354   1              s[1]=tem % 1000/100+0x30;
 355   1              s[2]=0x2E;
 356   1              s[3]=tem%100/10+0x30;
 357   1              s[4]=0x43;
 358   1              s[5]='\0';
 359   1      }
 360          
 361          void delay(uint a)
 362          {                        
 363   1          uint b;
 364   1          for(;a>0;a--)
 365   1                      for(b=125;b>0;b--);
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 7   

 366   1      }
 367          
 368          
 369          void i2c_Init(void)
 370          {
 371   1              SCL=1;
 372   1              SDA=1;
 373   1              _nop_();
 374   1              _nop_();
 375   1              _nop_();
 376   1              _nop_();
 377   1              SCL=0;
 378   1              delay(1);
 379   1              SCL=1;
 380   1      }
 381          
 382          
 383          void start_bit(void)
 384          {
 385   1              SDA=1;
 386   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 387   1              SCL=1;
 388   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 389   1              SDA=0;
 390   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 391   1              SCL=0;
 392   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 393   1      }
 394          
 395          void stop_bit(void)
 396          {
 397   1              SCL=0;
 398   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 399   1              SDA=0;
 400   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 401   1              SCL=1;
 402   1              _nop_();_nop_();_nop_();_nop_();_nop_();
 403   1              SDA=1;
 404   1      }
 405          
 406          void send(uchar dat_byte)
 407          {
 408   1              char i,n,dat;
 409   1              n=Nack;
 410   1      send:
 411   1              dat=dat_byte;
 412   1              for(i=0;i<8;i++)
 413   1              {
 414   2                      if(dat&0x80)
 415   2                              bit_out=1;
 416   2                      else
 417   2                              bit_out=0;
 418   2                      send_bit();
 419   2                      dat=dat<<1;
 420   2              }
 421   1              receive_bit();
 422   1              if(bit_in==1)
 423   1              {
 424   2                      stop_bit();
 425   2                      if(n!=0)
 426   2                      {
 427   3                              n--;
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 8   

 428   3                              goto Repeat;
 429   3                      }
 430   2              }
 431   1              goto exit;
 432   1      Repeat:
 433   1              start_bit();
 434   1              goto send;
 435   1      exit: ;
 436   1      }
 437          
 438          void send_bit(void)
 439          {
 440   1              if(bit_out==0)
 441   1                      SDA=0;
 442   1              else
 443   1                      SDA=1;
 444   1              _nop_();
 445   1              SCL=1;
 446   1              _nop_();_nop_();_nop_();_nop_();
 447   1              _nop_();_nop_();_nop_();_nop_();
 448   1              SCL=0;
 449   1              _nop_();_nop_();_nop_();_nop_();
 450   1              _nop_();_nop_();_nop_();_nop_();
 451   1      }
 452          
 453          uchar read(void)
 454          {
 455   1              uchar i,dat;
 456   1              dat=0;
 457   1              for(i=0;i<8;i++)
 458   1              {
 459   2                      dat=dat<<1;
 460   2                      receive_bit();
 461   2                      if(bit_in==1)
 462   2                              dat=dat+1;
 463   2              }
 464   1              send_bit();
 465   1              return dat;
 466   1      }
 467          
 468          void receive_bit(void)
 469          {
 470   1              SDA=1;bit_in=1;
 471   1              SCL=1;
 472   1              _nop_();_nop_();_nop_();_nop_();
 473   1              _nop_();_nop_();_nop_();_nop_();
 474   1              bit_in=SDA;
 475   1              _nop_();
 476   1              SCL=0;
 477   1              _nop_();_nop_();_nop_();_nop_();
 478   1              _nop_();_nop_();_nop_();_nop_();
 479   1      }
 480          
 481          uint getTemp(void)
 482          {
 483   1              start_bit();
 484   1              send(0xB4); 
 485   1              send(0x07);  
 486   1              start_bit();
 487   1              send(0x01);
 488   1              bit_out=0;
 489   1              temL=read();
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 9   

 490   1              bit_out=0;
 491   1              temH=read();
 492   1              bit_out=1;
 493   1              err=read();
 494   1              stop_bit();
 495   1              return (temH*256+temL)*2-27315;
 496   1      }
 497          
 498          void BlueSend(uchar *str,uchar n)
 499          {
 500   1              uchar i;
 501   1              for(i=0;i<n;i++){
 502   2                      StartTXD(str[i]);
 503   2                      while (!TxdEnd); 
 504   2                      delay(100);                                                                               
 505   2              }
 506   1      }
 507          
 508          void ConfigUART(unsigned int baud)
 509          {
 510   1              TMOD &= 0xF0; 
 511   1              TMOD |= 0x02; 
 512   1              TH0 = 256 - (11059200/12)/baud; 
 513   1      }
 514          
 515          
 516          void StartRXD()
 517          {
 518   1              TL0 = 256 - ((256-TH0)>>1); 
 519   1              ET0 = 1; 
 520   1              TR0 = 1; 
 521   1              RxdEnd = 0; 
 522   1              RxdOrTxd = 0; 
 523   1      }
 524          
 525          void StartTXD(unsigned char dat)
 526          {
 527   1              TxdBuf = dat; 
 528   1              TL0 = TH0; 
 529   1              ET0 = 1; 
 530   1              TR0 = 1; 
 531   1              PIN_TXD = 0; 
 532   1              TxdEnd = 0; 
 533   1              RxdOrTxd = 1; 
 534   1      }
 535          
 536          void InterruptTimer0() interrupt 1
 537          {
 538   1              static unsigned char cnt = 0; 
 539   1              if (RxdOrTxd) 
 540   1              {
 541   2                      cnt++;
 542   2                      if (cnt <= 8) 
 543   2                      {
 544   3                              PIN_TXD = TxdBuf & 0x01;
 545   3                              TxdBuf >>= 1;
 546   3                      }
 547   2                      else if (cnt == 9) 
 548   2                      {
 549   3                              PIN_TXD = 1;
 550   3                      }else{
 551   3                              cnt = 0; 
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 10  

 552   3                              TR0 = 0; 
 553   3                              TxdEnd = 1; 
 554   3                      }
 555   2              }else{
 556   2                      if (cnt == 0) 
 557   2                      {
 558   3                              if (!PIN_RXD) 
 559   3                              {
 560   4                                      RxdBuf = 0;
 561   4                                      cnt++;
 562   4                              }else{
 563   4                                      TR0 = 0; 
 564   4                              }
 565   3                      }else if (cnt <= 8){
 566   3                              RxdBuf >>= 1; 
 567   3                              if (PIN_RXD) 
 568   3                              { 
 569   4                                      RxdBuf |= 0x80;
 570   4                              }
 571   3                              cnt++;
 572   3                      }else{
 573   3                              cnt = 0; 
 574   3                              TR0 = 0; 
 575   3                              if (PIN_RXD)
 576   3                              {
 577   4                                      RxdEnd = 1; 
 578   4                              }
 579   3                      }
 580   2              }
 581   1      }
 582          
 583          void cmd_w(uchar cmd)                                  
 584          {
 585   1              //LCDE=0;
 586   1              busy();                                                 
 587   1              P2=cmd;                                                 
 588   1              RS=0;                                                    
 589   1              RW=0;                                                    
 590   1              LCDE=1;                                               
 591   1              LCDE=0;
 592   1      }
 593          
 594          void init1602(void)                            
 595          {
 596   1              cmd_w(0x01);                                 //Clean
 597   1              cmd_w(0x0c);                                 //Inital Settings
 598   1              cmd_w(0x06);
 599   1              cmd_w(0x38);  
 600   1      }
 601                                         
 602          
 603          void busy(void)                                 //LCD is busy ?
 604          {
 605   1              flag1=0x80;                                    
 606   1              while(flag1&0x80)                          
 607   1              {
 608   2                      P2=0xff;
 609   2                      RS=0;                                               
 610   2                      RW=1;                                             
 611   2                      LCDE=1;                                       
 612   2                      flag1=P2;                                       
 613   2                      LCDE=0;
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 11  

 614   2              }
 615   1      }
 616          
 617          void dat_w(uchar dat)                                  
 618          {
 619   1              busy();                                               
 620   1      //      LCDE=0;
 621   1              if(flag1==16)
 622   1              {       
 623   2                      P2=0xC0;
 624   2                  RS=0;                                               
 625   2                  RW=0;                                                                                        
 626   2                  LCDE=1;                                               
 627   2                  LCDE=0;
 628   2              }
 629   1              P2=dat;
 630   1              RS=1;                                                       
 631   1              RW=0;                                                                                                    
             - 
 632   1              LCDE=1;                                                   
 633   1              LCDE=0;
 634   1      }
 635          
 636          void LCD_print(uchar *str,uchar n)                                      
 637          {
 638   1              if(n)
 639   1                      cmd_w(0x01);
 640   1              while(*str!='\0')                                   
 641   1              {
 642   2                      dat_w(*str);                                  
 643   2                      str++;                                                
 644   2              }
 645   1      }
 646          
 647          void I2C_Start(void)
 648          {
 649   1              SDA=1;
 650   1              delay(1);
 651   1              SCL=1;
 652   1              delay(1);
 653   1              SDA=0;
 654   1              delay(1);
 655   1              SCL=0;
 656   1                      
 657   1      }
 658          
 659          void I2C_Stop(void)
 660          {
 661   1              SDA=0;
 662   1              delay(1);
 663   1              SCL=1;
 664   1              delay(1);
 665   1              SDA=1;
 666   1              delay(1);       
 667   1      }
 668          
 669          void I2C_Ack(void)
 670          {
 671   1              uchar i;
 672   1              SCL=1;
 673   1              delay(1);
 674   1              while((SDA==1)&&(i<255)) i++;
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 12  

 675   1              SCL=0;
 676   1              delay(1);
 677   1              SDA=1;
 678   1      }
 679          
 680          void Write_Byte(uchar wdata)
 681          {
 682   1              uchar i;
 683   1              EEP=wdata;
 684   1              for(i=0;i<8;i++)
 685   1              {       
 686   2                      SDA=EEP_7;
 687   2                      SCL=1;
 688   2                      delay(1);
 689   2                      EEP<<=1;
 690   2                      SCL=0;
 691   2                      delay(1);
 692   2              }
 693   1              SDA=1;
 694   1              delay(1);
 695   1              SCL=0;
 696   1      }
 697          
 698          uchar Read_Byte(void)
 699          {
 700   1              uchar i;
 701   1              SDA=1;
 702   1              EEP=0;
 703   1              for(i=0;i<8;i++)
 704   1              {
 705   2                      EEP<<=1;
 706   2                      SCL=1;
 707   2                  delay(1);
 708   2                      EEP_0=SDA;
 709   2                      SCL=0;
 710   2                      delay(1);
 711   2              }
 712   1              return EEP;
 713   1      }
 714          
 715          void ewrite(uchar addr,uchar dat)
 716          {
 717   1              I2C_Start();
 718   1              Write_Byte(0xa0);
 719   1              I2C_Ack();
 720   1              Write_Byte(addr);  
 721   1              I2C_Ack();
 722   1              Write_Byte(dat);
 723   1              I2C_Ack();
 724   1              I2C_Stop();
 725   1      }
 726          
 727          uchar eread(uchar addr)
 728          {
 729   1              uchar dat;
 730   1              I2C_Start();
 731   1              Write_Byte(0xa0);
 732   1              I2C_Ack();
 733   1              Write_Byte(addr);  
 734   1              I2C_Ack();
 735   1              I2C_Start();
 736   1              Write_Byte(0xa1);
C51 COMPILER V9.01   MAIN                                                                  07/25/2021 00:01:37 PAGE 13  

 737   1              I2C_Ack();
 738   1              dat=Read_Byte();
 739   1              I2C_Stop();
 740   1              return dat;
 741   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2246    ----
   CONSTANT SIZE    =     69    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     34      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
